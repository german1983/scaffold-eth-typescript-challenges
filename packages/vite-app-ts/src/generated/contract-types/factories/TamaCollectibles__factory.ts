/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TamaCollectibles,
  TamaCollectiblesInterface,
} from "../TamaCollectibles";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "APPLE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BANANA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIELD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWORD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THORS_HAMMER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180608001604052806045815260200162001bb76045913962000037816200010f565b50620000683360006b033b2e3c9fd0803ce8000000604051806020016040528060008152506200012860201b60201c565b62000094336001670de0b6b3a7640000604051806020016040528060008152506200012860201b60201c565b620000b93360026001604051806020016040528060008152506200012860201b60201c565b620000e1336003633b9aca00604051806020016040528060008152506200012860201b60201c565b62000109336004633b9aca00604051806020016040528060008152506200012860201b60201c565b62000769565b80516200012490600290602084019062000483565b5050565b6001600160a01b0384166200018e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b33620001b481600087620001a28862000248565b620001ad8862000248565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290620001e690849062000529565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4620001ad816000878787876200029e565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811062000285576200028562000550565b602090810291909101015292915050565b505050505050565b620002bd846001600160a01b03166200047460201b620005cf1760201c565b15620002965760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620002f99089908990889088908890600401620005b6565b6020604051808303816000875af192505050801562000337575060408051601f3d908101601f191682019092526200033491810190620005fd565b60015b620003f8576200034662000630565b806308c379a014156200038757506200035e62000688565b806200036b575062000389565b8060405162461bcd60e51b815260040162000185919062000717565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000185565b6001600160e01b0319811663f23a6e6160e01b146200046b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000185565b50505050505050565b6001600160a01b03163b151590565b82805462000491906200072c565b90600052602060002090601f016020900481019282620004b5576000855562000500565b82601f10620004d057805160ff191683800117855562000500565b8280016001018555821562000500579182015b8281111562000500578251825591602001919060010190620004e3565b506200050e92915062000512565b5090565b5b808211156200050e576000815560010162000513565b600082198211156200054b57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156200058e5760208185018101518683018201520162000570565b81811115620005a1576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620005f29083018462000566565b979650505050505050565b6000602082840312156200061057600080fd5b81516001600160e01b0319811681146200062957600080fd5b9392505050565b600060033d11156200064a5760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156200068157634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015620006975790565b6040516003193d81016004833e81513d6001600160401b038083116024840183101715620006c757505050505090565b8285019150815181811115620006e05750505050505090565b843d8701016020828501011115620006fb5750505050505090565b6200070c602082860101876200064d565b509095945050505050565b60208152600062000629602083018462000566565b600181811c908216806200074157607f821691505b602082108114156200076357634e487b7160e01b600052602260045260246000fd5b50919050565b61143e80620007796000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80635b2725ed1161008c578063c8b35c7a11610066578063c8b35c7a1461019c578063d562e204146101a4578063e985e9c5146101ac578063f242432a146101e857600080fd5b80635b2725ed146101795780637dfc03c414610181578063a22cb4651461018957600080fd5b8062fdd58e146100d357806301ffc9a7146100f95780630e89341c1461011c57806313dc989f1461013c5780632eb2c2d6146101445780634e1273f414610159575b600080fd5b6100e66100e1366004610c40565b6101fb565b6040519081526020015b60405180910390f35b61010c610107366004610c83565b610292565b60405190151581526020016100f0565b61012f61012a366004610ca7565b6102e4565b6040516100f09190610d0d565b6100e6600381565b610157610152366004610e6c565b610378565b005b61016c610167366004610f16565b61040f565b6040516100f0919061101c565b6100e6600481565b6100e6600181565b61015761019736600461102f565b610539565b6100e6600081565b6100e6600281565b61010c6101ba36600461106b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101576101f636600461109e565b610548565b60006001600160a01b03831661026c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c357506001600160e01b031982166303a24d0760e21b145b806102de57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f390611103565b80601f016020809104026020016040519081016040528092919081815260200182805461031f90611103565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b50505050509050919050565b6001600160a01b038516331480610394575061039485336101ba565b6103fb5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610263565b61040885858585856105de565b5050505050565b606081518351146104745760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610263565b6000835167ffffffffffffffff81111561049057610490610d20565b6040519080825280602002602001820160405280156104b9578160200160208202803683370190505b50905060005b8451811015610531576105048582815181106104dd576104dd61113e565b60200260200101518583815181106104f7576104f761113e565b60200260200101516101fb565b8282815181106105165761051661113e565b602090810291909101015261052a8161116a565b90506104bf565b509392505050565b6105443383836107bb565b5050565b6001600160a01b038516331480610564575061056485336101ba565b6105c25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610263565b610408858585858561089c565b6001600160a01b03163b151590565b81518351146106405760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610263565b6001600160a01b0384166106665760405162461bcd60e51b815260040161026390611185565b3360005b845181101561074d5760008582815181106106875761068761113e565b6020026020010151905060008583815181106106a5576106a561113e565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106f55760405162461bcd60e51b8152600401610263906111ca565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610732908490611214565b92505081905550505050806107469061116a565b905061066a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161079d92919061122c565b60405180910390a46107b38187878787876109c2565b505050505050565b816001600160a01b0316836001600160a01b0316141561082f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610263565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108c25760405162461bcd60e51b815260040161026390611185565b336108db8187876108d288610b1e565b61040888610b1e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561091c5760405162461bcd60e51b8152600401610263906111ca565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610959908490611214565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109b9828888888888610b69565b50505050505050565b6001600160a01b0384163b156107b35760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a06908990899088908890889060040161125a565b6020604051808303816000875af1925050508015610a41575060408051601f3d908101601f19168201909252610a3e918101906112b8565b60015b610aee57610a4d6112d5565b806308c379a01415610a875750610a626112f1565b80610a6d5750610a89565b8060405162461bcd60e51b81526004016102639190610d0d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610263565b6001600160e01b0319811663bc197c8160e01b146109b95760405162461bcd60e51b81526004016102639061137b565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b5857610b5861113e565b602090810291909101015292915050565b6001600160a01b0384163b156107b35760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bad90899089908890889088906004016113c3565b6020604051808303816000875af1925050508015610be8575060408051601f3d908101601f19168201909252610be5918101906112b8565b60015b610bf457610a4d6112d5565b6001600160e01b0319811663f23a6e6160e01b146109b95760405162461bcd60e51b81526004016102639061137b565b80356001600160a01b0381168114610c3b57600080fd5b919050565b60008060408385031215610c5357600080fd5b610c5c83610c24565b946020939093013593505050565b6001600160e01b031981168114610c8057600080fd5b50565b600060208284031215610c9557600080fd5b8135610ca081610c6a565b9392505050565b600060208284031215610cb957600080fd5b5035919050565b6000815180845260005b81811015610ce657602081850181015186830182015201610cca565b81811115610cf8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610ca06020830184610cc0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610d5c57610d5c610d20565b6040525050565b600067ffffffffffffffff821115610d7d57610d7d610d20565b5060051b60200190565b600082601f830112610d9857600080fd5b81356020610da582610d63565b604051610db28282610d36565b83815260059390931b8501820192828101915086841115610dd257600080fd5b8286015b84811015610ded5780358352918301918301610dd6565b509695505050505050565b600082601f830112610e0957600080fd5b813567ffffffffffffffff811115610e2357610e23610d20565b604051610e3a601f8301601f191660200182610d36565b818152846020838601011115610e4f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e8457600080fd5b610e8d86610c24565b9450610e9b60208701610c24565b9350604086013567ffffffffffffffff80821115610eb857600080fd5b610ec489838a01610d87565b94506060880135915080821115610eda57600080fd5b610ee689838a01610d87565b93506080880135915080821115610efc57600080fd5b50610f0988828901610df8565b9150509295509295909350565b60008060408385031215610f2957600080fd5b823567ffffffffffffffff80821115610f4157600080fd5b818501915085601f830112610f5557600080fd5b81356020610f6282610d63565b604051610f6f8282610d36565b83815260059390931b8501820192828101915089841115610f8f57600080fd5b948201945b83861015610fb457610fa586610c24565b82529482019490820190610f94565b96505086013592505080821115610fca57600080fd5b50610fd785828601610d87565b9150509250929050565b600081518084526020808501945080840160005b8381101561101157815187529582019590820190600101610ff5565b509495945050505050565b602081526000610ca06020830184610fe1565b6000806040838503121561104257600080fd5b61104b83610c24565b91506020830135801515811461106057600080fd5b809150509250929050565b6000806040838503121561107e57600080fd5b61108783610c24565b915061109560208401610c24565b90509250929050565b600080600080600060a086880312156110b657600080fd5b6110bf86610c24565b94506110cd60208701610c24565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110f757600080fd5b610f0988828901610df8565b600181811c9082168061111757607f821691505b6020821081141561113857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561117e5761117e611154565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6000821982111561122757611227611154565b500190565b60408152600061123f6040830185610fe1565b82810360208401526112518185610fe1565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061128690830186610fe1565b82810360608401526112988186610fe1565b905082810360808401526112ac8185610cc0565b98975050505050505050565b6000602082840312156112ca57600080fd5b8151610ca081610c6a565b600060033d11156112ee5760046000803e5060005160e01c5b90565b600060443d10156112ff5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561132f57505050505090565b82850191508151818111156113475750505050505090565b843d87010160208285010111156113615750505050505090565b61137060208286010187610d36565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113fd90830184610cc0565b97965050505050505056fea264697066735822122068a089c05d64877dcb6f0ccc96160280cba3cc34345d2878b31400443210590264736f6c634300080c00336261667962656966666767357a6d6d6867666a766379673469347274626267757065786c636970347a666f626734347a626f65327777736c66336d2f6d657461646174612f";

export class TamaCollectibles__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TamaCollectibles> {
    return super.deploy(overrides || {}) as Promise<TamaCollectibles>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TamaCollectibles {
    return super.attach(address) as TamaCollectibles;
  }
  connect(signer: Signer): TamaCollectibles__factory {
    return super.connect(signer) as TamaCollectibles__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TamaCollectiblesInterface {
    return new utils.Interface(_abi) as TamaCollectiblesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TamaCollectibles {
    return new Contract(address, _abi, signerOrProvider) as TamaCollectibles;
  }
}
