/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TamaCollectibles,
  TamaCollectiblesInterface,
} from "../TamaCollectibles";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "APPLE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BANANA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIELD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWORD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THORS_HAMMER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vendor",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180608001604052806045815260200162001a2660459139620000378162000049565b50620000433362000062565b62000197565b80516200005e906002906020840190620000b4565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b600181811c908216806200016f57607f821691505b602082108114156200019157634e487b7160e01b600052602260045260246000fd5b50919050565b61187f80620001a76000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c8063715018a6116100a2578063c8b35c7a11610071578063c8b35c7a1461020e578063d562e20414610216578063e985e9c51461021e578063f242432a1461025a578063f2fde38b1461026d57600080fd5b8063715018a6146101d05780637dfc03c4146101d85780638da5cb5b146101e0578063a22cb465146101fb57600080fd5b806319ab453c116100de57806319ab453c146101805780632eb2c2d6146101955780634e1273f4146101a85780635b2725ed146101c857600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630e89341c1461015857806313dc989f14610178575b600080fd5b61012261011d366004611034565b610280565b6040519081526020015b60405180910390f35b610148610143366004611074565b610317565b604051901515815260200161012c565b61016b610166366004611098565b610369565b60405161012c91906110fe565b610122600381565b61019361018e366004611111565b6103fd565b005b6101936101a3366004611278565b61055a565b6101bb6101b6366004611322565b6105f1565b60405161012c9190611428565b610122600481565b61019361071b565b610122600181565b6003546040516001600160a01b03909116815260200161012c565b61019361020936600461143b565b610751565b610122600081565b610122600281565b61014861022c366004611477565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101936102683660046114aa565b610760565b61019361027b366004611111565b6107e7565b60006001600160a01b0383166102f15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061034857506001600160e01b031982166303a24d0760e21b145b8061036357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103789061150f565b80601f01602080910402602001604051908101604052809291908181526020018280546103a49061150f565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b50505050509050919050565b6003546001600160a01b031633146104275760405162461bcd60e51b81526004016102e89061154a565b600354600160a01b900460ff16156104995760405162461bcd60e51b815260206004820152602f60248201527f54616d61436f6c6c65637469626c65733a20696e6974202d20616c726561647960448201526e081a5b881a5b9a5d1a585b1a5e9959608a1b60648201526084016102e8565b6003805460ff60a01b1916600160a01b179055604080516020810190915260008082526104d6918391906b033b2e3c9fd0803ce80000009061087f565b6104fa816001670de0b6b3a76400006040518060200160405280600081525061087f565b61051781600260016040518060200160405280600081525061087f565b610537816003633b9aca006040518060200160405280600081525061087f565b610557816004633b9aca006040518060200160405280600081525061087f565b50565b6001600160a01b0385163314806105765750610576853361022c565b6105dd5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102e8565b6105ea8585858585610989565b5050505050565b606081518351146106565760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102e8565b6000835167ffffffffffffffff8111156106725761067261112c565b60405190808252806020026020018201604052801561069b578160200160208202803683370190505b50905060005b8451811015610713576106e68582815181106106bf576106bf61157f565b60200260200101518583815181106106d9576106d961157f565b6020026020010151610280565b8282815181106106f8576106f861157f565b602090810291909101015261070c816115ab565b90506106a1565b509392505050565b6003546001600160a01b031633146107455760405162461bcd60e51b81526004016102e89061154a565b61074f6000610b66565b565b61075c338383610bb8565b5050565b6001600160a01b03851633148061077c575061077c853361022c565b6107da5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102e8565b6105ea8585858585610c99565b6003546001600160a01b031633146108115760405162461bcd60e51b81526004016102e89061154a565b6001600160a01b0381166108765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e8565b61055781610b66565b6001600160a01b0384166108df5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102e8565b336108f9816000876108f088610db6565b6105ea88610db6565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906109299084906115c6565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46105ea81600087878787610e01565b81518351146109eb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102e8565b6001600160a01b038416610a115760405162461bcd60e51b81526004016102e8906115de565b3360005b8451811015610af8576000858281518110610a3257610a3261157f565b602002602001015190506000858381518110610a5057610a5061157f565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610aa05760405162461bcd60e51b81526004016102e890611623565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610add9084906115c6565b9250508190555050505080610af1906115ab565b9050610a15565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b4892919061166d565b60405180910390a4610b5e818787878787610f5d565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610c2c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102e8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610cbf5760405162461bcd60e51b81526004016102e8906115de565b33610ccf8187876108f088610db6565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610d105760405162461bcd60e51b81526004016102e890611623565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610d4d9084906115c6565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dad828888888888610e01565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610df057610df061157f565b602090810291909101015292915050565b6001600160a01b0384163b15610b5e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e45908990899088908890889060040161169b565b6020604051808303816000875af1925050508015610e80575060408051601f3d908101601f19168201909252610e7d918101906116e0565b60015b610f2d57610e8c6116fd565b806308c379a01415610ec65750610ea1611719565b80610eac5750610ec8565b8060405162461bcd60e51b81526004016102e891906110fe565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102e8565b6001600160e01b0319811663f23a6e6160e01b14610dad5760405162461bcd60e51b81526004016102e8906117a3565b6001600160a01b0384163b15610b5e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610fa190899089908890889088906004016117eb565b6020604051808303816000875af1925050508015610fdc575060408051601f3d908101601f19168201909252610fd9918101906116e0565b60015b610fe857610e8c6116fd565b6001600160e01b0319811663bc197c8160e01b14610dad5760405162461bcd60e51b81526004016102e8906117a3565b80356001600160a01b038116811461102f57600080fd5b919050565b6000806040838503121561104757600080fd5b61105083611018565b946020939093013593505050565b6001600160e01b03198116811461055757600080fd5b60006020828403121561108657600080fd5b81356110918161105e565b9392505050565b6000602082840312156110aa57600080fd5b5035919050565b6000815180845260005b818110156110d7576020818501810151868301820152016110bb565b818111156110e9576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061109160208301846110b1565b60006020828403121561112357600080fd5b61109182611018565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156111685761116861112c565b6040525050565b600067ffffffffffffffff8211156111895761118961112c565b5060051b60200190565b600082601f8301126111a457600080fd5b813560206111b18261116f565b6040516111be8282611142565b83815260059390931b85018201928281019150868411156111de57600080fd5b8286015b848110156111f957803583529183019183016111e2565b509695505050505050565b600082601f83011261121557600080fd5b813567ffffffffffffffff81111561122f5761122f61112c565b604051611246601f8301601f191660200182611142565b81815284602083860101111561125b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561129057600080fd5b61129986611018565b94506112a760208701611018565b9350604086013567ffffffffffffffff808211156112c457600080fd5b6112d089838a01611193565b945060608801359150808211156112e657600080fd5b6112f289838a01611193565b9350608088013591508082111561130857600080fd5b5061131588828901611204565b9150509295509295909350565b6000806040838503121561133557600080fd5b823567ffffffffffffffff8082111561134d57600080fd5b818501915085601f83011261136157600080fd5b8135602061136e8261116f565b60405161137b8282611142565b83815260059390931b850182019282810191508984111561139b57600080fd5b948201945b838610156113c0576113b186611018565b825294820194908201906113a0565b965050860135925050808211156113d657600080fd5b506113e385828601611193565b9150509250929050565b600081518084526020808501945080840160005b8381101561141d57815187529582019590820190600101611401565b509495945050505050565b60208152600061109160208301846113ed565b6000806040838503121561144e57600080fd5b61145783611018565b91506020830135801515811461146c57600080fd5b809150509250929050565b6000806040838503121561148a57600080fd5b61149383611018565b91506114a160208401611018565b90509250929050565b600080600080600060a086880312156114c257600080fd5b6114cb86611018565b94506114d960208701611018565b93506040860135925060608601359150608086013567ffffffffffffffff81111561150357600080fd5b61131588828901611204565b600181811c9082168061152357607f821691505b6020821081141561154457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156115bf576115bf611595565b5060010190565b600082198211156115d9576115d9611595565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061168060408301856113ed565b828103602084015261169281856113ed565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116d5908301846110b1565b979650505050505050565b6000602082840312156116f257600080fd5b81516110918161105e565b600060033d11156117165760046000803e5060005160e01c5b90565b600060443d10156117275790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561175757505050505090565b828501915081518181111561176f5750505050505090565b843d87010160208285010111156117895750505050505090565b61179860208286010187611142565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611817908301866113ed565b828103606084015261182981866113ed565b9050828103608084015261183d81856110b1565b9897505050505050505056fea26469706673582212208563f6f2d9e38f9d648a152e17df305b3b6f9da284f89645d467830fa935db3964736f6c634300080c0033626166796265696362666565627a73346e747775356b747365666d6967376e7a74797a357075786e62763477646d366575697662716634696871612f6d657461646174612f";

export class TamaCollectibles__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TamaCollectibles> {
    return super.deploy(overrides || {}) as Promise<TamaCollectibles>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TamaCollectibles {
    return super.attach(address) as TamaCollectibles;
  }
  connect(signer: Signer): TamaCollectibles__factory {
    return super.connect(signer) as TamaCollectibles__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TamaCollectiblesInterface {
    return new utils.Interface(_abi) as TamaCollectiblesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TamaCollectibles {
    return new Contract(address, _abi, signerOrProvider) as TamaCollectibles;
  }
}
