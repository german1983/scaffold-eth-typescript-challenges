/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TamaController,
  TamaControllerInterface,
} from "../TamaController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "TamacharacterId",
    outputs: [
      {
        internalType: "uint256",
        name: "blockadded",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "scale",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURIAssigned",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tankId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "scale",
        type: "uint8",
      },
    ],
    name: "transferNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600e81526d2a30b6b0a1b7b73a3937b63632b960911b60208083019182528351808501909452600484526354414d4360e01b9084015281519192916200006491600091620000f3565b5080516200007a906001906020840190620000f3565b50505062000097620000916200009d60201b60201c565b620000a1565b620001d6565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b61236e80620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063c75458491161007c578063c754584914610318578063c87b56dd1461032b578063e985e9c51461033e578063eb784c6b1461037a578063f23a6e611461038d578063f2fde38b146103a757600080fd5b8063715018a61461029c5780638da5cb5b146102a457806395d89b41146102b5578063a22cb465146102bd578063b88d4fde146102d0578063bc197c81146102e357600080fd5b806323b872dd1161011557806323b872dd1461022a5780632f745c591461023d57806342842e0e146102505780634f6ccce7146102635780636352211e1461027657806370a082311461028957600080fd5b806301a5e45d1461015d57806301ffc9a7146101a057806306fdde03146101c3578063081812fc146101d8578063095ea7b31461020357806318160ddd14610218575b600080fd5b61017061016b366004611b98565b6103ba565b604080519485526001600160a01b0390931660208501529183015260ff1660608201526080015b60405180910390f35b6101b36101ae366004611bd0565b61040c565b6040519015158152602001610197565b6101cb61041d565b6040516101979190611c45565b6101eb6101e6366004611c58565b6104af565b6040516001600160a01b039091168152602001610197565b610216610211366004611c86565b61053c565b005b6008545b604051908152602001610197565b610216610238366004611cb2565b610652565b61021c61024b366004611c86565b610683565b61021661025e366004611cb2565b610719565b61021c610271366004611c58565b610734565b6101eb610284366004611c58565b6107c7565b61021c610297366004611cf3565b61083e565b6102166108c5565b600b546001600160a01b03166101eb565b6101cb61092b565b6102166102cb366004611d10565b61093a565b6102166102de366004611dda565b610949565b6102ff6102f1366004611ee8565b600098975050505050505050565b6040516001600160e01b03199091168152602001610197565b61021c610326366004611fa7565b610981565b6101cb610339366004611c58565b6109b2565b6101b361034c366004611ff0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61021661038836600461201e565b6109bd565b6102ff61039b36600461206e565b60009695505050505050565b6102166103b5366004611cf3565b610cef565b600c60205281600052604060002081815481106103d657600080fd5b600091825260209091206004909102018054600182015460028301546003909301549194506001600160a01b0316925060ff1684565b600061041782610dba565b92915050565b60606000805461042c906120ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610458906120ea565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b5050505050905090565b60006104ba82610ddf565b6105205760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610547826107c7565b9050806001600160a01b0316836001600160a01b031614156105b55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610517565b336001600160a01b03821614806105d157506105d1813361034c565b6106435760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610517565b61064d8383610dfc565b505050565b61065c3382610e6a565b6106785760405162461bcd60e51b815260040161051790612125565b61064d838383610f54565b600061068e8361083e565b82106106f05760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610517565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61064d83838360405180602001604052806000815250610949565b600061073f60085490565b82106107a25760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610517565b600882815481106107b5576107b5612176565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610517565b60006001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610517565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b0316331461091f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610517565b61092960006110fb565b565b60606001805461042c906120ea565b61094533838361114d565b5050565b6109533383610e6a565b61096f5760405162461bcd60e51b815260040161051790612125565b61097b8484848461121c565b50505050565b6000610991600d80546001019055565b600061099c600d5490565b90506109a8338261124f565b610417818461138e565b606061041782611419565b836109c83384610e6a565b610a145760405162461bcd60e51b815260206004820152601860248201527f796f75206e65656420746f206f776e207468652074616e6b00000000000000006044820152606401610517565b6001600160a01b038516301415610a595760405162461bcd60e51b81526020600482015260096024820152686e696365207472792160b81b6044820152606401610517565b6000838152600c6020526040902054600211610ace5760405162461bcd60e51b815260206004820152602e60248201527f74616e6b20686173207265616368656420746865206d6178206c696d6974206f60448201526d66203120636f6d706f6e656e747360901b6064820152608401610517565b6001600160a01b0381166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101879052606401600060405180830381600087803b158015610b2c57600080fd5b505af1158015610b40573d6000803e3d6000fd5b50506040516331a9108f60e11b8152600481018790523092506001600160a01b0384169150636352211e90602401602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf919061218c565b6001600160a01b031614610bfb5760405162461bcd60e51b8152602060048201526013602482015272139195081b9bdd081d1c985b9cd9995c9c9959606a1b6044820152606401610517565b6000610c086001436121bf565b40336040805160208101939093526bffffffffffffffffffffffff19606092831b8116918401919091523090911b166054820152606881018690526088810185905260a80160408051808303601f190190526000958652600c60209081528187206080840183524384526001600160a01b03998a1682850190815292840198895260ff96871660608501908152815460018082018455928a529290982093516004909202909301908155905191810180546001600160a01b0319169290981691909117909655505091516002840155516003909201805460ff191692909116919091179055565b600b546001600160a01b03163314610d495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610517565b6001600160a01b038116610dae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610517565b610db7816110fb565b50565b60006001600160e01b0319821663780e9d6360e01b1480610417575061041782611588565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e31826107c7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610e7582610ddf565b610ed65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610517565b6000610ee1836107c7565b9050806001600160a01b0316846001600160a01b03161480610f1c5750836001600160a01b0316610f11846104af565b6001600160a01b0316145b80610f4c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610f67826107c7565b6001600160a01b031614610fcb5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610517565b6001600160a01b03821661102d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610517565b6110388383836115d8565b611043600082610dfc565b6001600160a01b038316600090815260036020526040812080546001929061106c9084906121bf565b90915550506001600160a01b038216600090815260036020526040812080546001929061109a9084906121d6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156111af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610517565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611227848484610f54565b611233848484846115e3565b61097b5760405162461bcd60e51b8152600401610517906121ee565b6001600160a01b0382166112a55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610517565b6112ae81610ddf565b156112fb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610517565b611307600083836115d8565b6001600160a01b03821660009081526003602052604081208054600192906113309084906121d6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61139782610ddf565b6113fa5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610517565b6000828152600a60209081526040909120825161064d92840190611aff565b606061142482610ddf565b61148a5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610517565b6000828152600a6020526040812080546114a3906120ea565b80601f01602080910402602001604051908101604052809291908181526020018280546114cf906120ea565b801561151c5780601f106114f15761010080835404028352916020019161151c565b820191906000526020600020905b8154815290600101906020018083116114ff57829003601f168201915b50505050509050600061153a60408051602081019091526000815290565b905080516000141561154d575092915050565b81511561157f578082604051602001611567929190612240565b60405160208183030381529060405292505050919050565b610f4c846116e1565b60006001600160e01b031982166380ac58cd60e01b14806115b957506001600160e01b03198216635b5e139f60e01b145b8061041757506301ffc9a760e01b6001600160e01b0319831614610417565b61064d8383836117b9565b60006001600160a01b0384163b156116d657604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061162790339089908890889060040161226f565b6020604051808303816000875af1925050508015611662575060408051601f3d908101601f1916820190925261165f918101906122ac565b60015b6116bc573d808015611690576040519150601f19603f3d011682016040523d82523d6000602084013e611695565b606091505b5080516116b45760405162461bcd60e51b8152600401610517906121ee565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f4c565b506001949350505050565b60606116ec82610ddf565b6117505760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610517565b600061176760408051602081019091526000815290565b9050600081511161178757604051806020016040528060008152506117b2565b8061179184611871565b6040516020016117a2929190612240565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166118145761180f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611837565b816001600160a01b0316836001600160a01b03161461183757611837838261196f565b6001600160a01b03821661184e5761064d81611a0c565b826001600160a01b0316826001600160a01b03161461064d5761064d8282611abb565b6060816118955750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118bf57806118a9816122c9565b91506118b89050600a836122fa565b9150611899565b60008167ffffffffffffffff8111156118da576118da611d4e565b6040519080825280601f01601f191660200182016040528015611904576020820181803683370190505b5090505b8415610f4c576119196001836121bf565b9150611926600a8661230e565b6119319060306121d6565b60f81b81838151811061194657611946612176565b60200101906001600160f81b031916908160001a905350611968600a866122fa565b9450611908565b6000600161197c8461083e565b61198691906121bf565b6000838152600760205260409020549091508082146119d9576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a1e906001906121bf565b60008381526009602052604081205460088054939450909284908110611a4657611a46612176565b906000526020600020015490508060088381548110611a6757611a67612176565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a9f57611a9f612322565b6001900381819060005260206000200160009055905550505050565b6000611ac68361083e565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611b0b906120ea565b90600052602060002090601f016020900481019282611b2d5760008555611b73565b82601f10611b4657805160ff1916838001178555611b73565b82800160010185558215611b73579182015b82811115611b73578251825591602001919060010190611b58565b50611b7f929150611b83565b5090565b5b80821115611b7f5760008155600101611b84565b60008060408385031215611bab57600080fd5b50508035926020909101359150565b6001600160e01b031981168114610db757600080fd5b600060208284031215611be257600080fd5b81356117b281611bba565b60005b83811015611c08578181015183820152602001611bf0565b8381111561097b5750506000910152565b60008151808452611c31816020860160208601611bed565b601f01601f19169290920160200192915050565b6020815260006117b26020830184611c19565b600060208284031215611c6a57600080fd5b5035919050565b6001600160a01b0381168114610db757600080fd5b60008060408385031215611c9957600080fd5b8235611ca481611c71565b946020939093013593505050565b600080600060608486031215611cc757600080fd5b8335611cd281611c71565b92506020840135611ce281611c71565b929592945050506040919091013590565b600060208284031215611d0557600080fd5b81356117b281611c71565b60008060408385031215611d2357600080fd5b8235611d2e81611c71565b915060208301358015158114611d4357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d7f57611d7f611d4e565b604051601f8501601f19908116603f01168101908282118183101715611da757611da7611d4e565b81604052809350858152868686011115611dc057600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611df057600080fd5b8435611dfb81611c71565b93506020850135611e0b81611c71565b925060408501359150606085013567ffffffffffffffff811115611e2e57600080fd5b8501601f81018713611e3f57600080fd5b611e4e87823560208401611d64565b91505092959194509250565b60008083601f840112611e6c57600080fd5b50813567ffffffffffffffff811115611e8457600080fd5b6020830191508360208260051b8501011115611e9f57600080fd5b9250929050565b60008083601f840112611eb857600080fd5b50813567ffffffffffffffff811115611ed057600080fd5b602083019150836020828501011115611e9f57600080fd5b60008060008060008060008060a0898b031215611f0457600080fd5b8835611f0f81611c71565b97506020890135611f1f81611c71565b9650604089013567ffffffffffffffff80821115611f3c57600080fd5b611f488c838d01611e5a565b909850965060608b0135915080821115611f6157600080fd5b611f6d8c838d01611e5a565b909650945060808b0135915080821115611f8657600080fd5b50611f938b828c01611ea6565b999c989b5096995094979396929594505050565b600060208284031215611fb957600080fd5b813567ffffffffffffffff811115611fd057600080fd5b8201601f81018413611fe157600080fd5b610f4c84823560208401611d64565b6000806040838503121561200357600080fd5b823561200e81611c71565b91506020830135611d4381611c71565b6000806000806080858703121561203457600080fd5b843561203f81611c71565b93506020850135925060408501359150606085013560ff8116811461206357600080fd5b939692955090935050565b60008060008060008060a0878903121561208757600080fd5b863561209281611c71565b955060208701356120a281611c71565b94506040870135935060608701359250608087013567ffffffffffffffff8111156120cc57600080fd5b6120d889828a01611ea6565b979a9699509497509295939492505050565b600181811c908216806120fe57607f821691505b6020821081141561211f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561219e57600080fd5b81516117b281611c71565b634e487b7160e01b600052601160045260246000fd5b6000828210156121d1576121d16121a9565b500390565b600082198211156121e9576121e96121a9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351612252818460208801611bed565b835190830190612266818360208801611bed565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122a290830184611c19565b9695505050505050565b6000602082840312156122be57600080fd5b81516117b281611bba565b60006000198214156122dd576122dd6121a9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612309576123096122e4565b500490565b60008261231d5761231d6122e4565b500690565b634e487b7160e01b600052603160045260246000fdfea264697066735822122051b74e6cdea2b852388dadef6c3303fcc324e78082b9c7953218090fe862c14464736f6c634300080c0033";

export class TamaController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TamaController> {
    return super.deploy(overrides || {}) as Promise<TamaController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TamaController {
    return super.attach(address) as TamaController;
  }
  connect(signer: Signer): TamaController__factory {
    return super.connect(signer) as TamaController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TamaControllerInterface {
    return new utils.Interface(_abi) as TamaControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TamaController {
    return new Contract(address, _abi, signerOrProvider) as TamaController;
  }
}
