/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TamaFriend, TamaFriendInterface } from "../TamaFriend";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURIInput",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a81526915185b58519c9a595b9960b21b6020808301918252835180850190945260048452631513919560e21b9084015281519192916200006091600091620000ef565b50805162000076906001906020840190620000ef565b505050620000936200008d6200009960201b60201c565b6200009d565b620001d2565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fd9062000195565b90600052602060002090601f0160209004810192826200012157600085556200016c565b82601f106200013c57805160ff19168380011785556200016c565b828001600101855582156200016c579182015b828111156200016c5782518255916020019190600101906200014f565b506200017a9291506200017e565b5090565b5b808211156200017a57600081556001016200017f565b600181811c90821680620001aa57607f821691505b60208210811415620001cc57634e487b7160e01b600052602260045260246000fd5b50919050565b611d2080620001e26000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb4651461026a578063b88d4fde1461027d578063c87b56dd14610290578063e985e9c5146102a3578063f2fde38b146102df57600080fd5b80636352211e1461022357806370a0823114610236578063715018a6146102495780638da5cb5b1461025157806395d89b411461026257600080fd5b806318160ddd116100f457806318160ddd146101cf57806323b872dd146101d75780632f745c59146101ea57806342842e0e146101fd5780634f6ccce71461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b314610199578063110bcd45146101ae575b600080fd5b61014461013f3660046117a2565b6102f2565b60405190151581526020015b60405180910390f35b610161610303565b6040516101509190611817565b61018161017c36600461182a565b610395565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461185f565b610422565b005b6101c16101bc366004611915565b610538565b604051908152602001610150565b6008546101c1565b6101ac6101e5366004611977565b610570565b6101c16101f836600461185f565b6105a1565b6101ac61020b366004611977565b610637565b6101c161021e36600461182a565b610652565b61018161023136600461182a565b6106e5565b6101c16102443660046119b3565b61075c565b6101ac6107e3565b600b546001600160a01b0316610181565b610161610849565b6101ac6102783660046119ce565b610858565b6101ac61028b366004611a0a565b610867565b61016161029e36600461182a565b61089f565b6101446102b1366004611a86565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102ed3660046119b3565b6108aa565b60006102fd82610975565b92915050565b60606000805461031290611ab9565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611ab9565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050905090565b60006103a08261099a565b6104065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061042d826106e5565b9050806001600160a01b0316836001600160a01b0316141561049b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103fd565b336001600160a01b03821614806104b757506104b781336102b1565b6105295760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103fd565b61053383836109b7565b505050565b6000610548600c80546001019055565b6000610553600c5490565b905061055f8482610a25565b6105698184610b64565b9392505050565b61057a3382610bef565b6105965760405162461bcd60e51b81526004016103fd90611af4565b610533838383610cd9565b60006105ac8361075c565b821061060e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61053383838360405180602001604052806000815250610867565b600061065d60085490565b82106106c05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103fd565b600882815481106106d3576106d3611b45565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103fd565b60006001600160a01b0382166107c75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103fd565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b0316331461083d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6108476000610e80565b565b60606001805461031290611ab9565b610863338383610ed2565b5050565b6108713383610bef565b61088d5760405162461bcd60e51b81526004016103fd90611af4565b61089984848484610fa1565b50505050565b60606102fd82610fd4565b600b546001600160a01b031633146109045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6001600160a01b0381166109695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fd565b61097281610e80565b50565b60006001600160e01b0319821663780e9d6360e01b14806102fd57506102fd82611160565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109ec826106e5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610a7b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103fd565b610a848161099a565b15610ad15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103fd565b610add600083836111b0565b6001600160a01b0382166000908152600360205260408120805460019290610b06908490611b71565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610b6d8261099a565b610bd05760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103fd565b6000828152600a602090815260409091208251610533928401906116f3565b6000610bfa8261099a565b610c5b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103fd565b6000610c66836106e5565b9050806001600160a01b0316846001600160a01b03161480610ca15750836001600160a01b0316610c9684610395565b6001600160a01b0316145b80610cd157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610cec826106e5565b6001600160a01b031614610d505760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103fd565b6001600160a01b038216610db25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103fd565b610dbd8383836111b0565b610dc86000826109b7565b6001600160a01b0383166000908152600360205260408120805460019290610df1908490611b89565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e1f908490611b71565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610f345760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103fd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fac848484610cd9565b610fb8848484846111bb565b6108995760405162461bcd60e51b81526004016103fd90611ba0565b6060610fdf8261099a565b6110455760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103fd565b6000828152600a60205260408120805461105e90611ab9565b80601f016020809104026020016040519081016040528092919081815260200182805461108a90611ab9565b80156110d75780601f106110ac576101008083540402835291602001916110d7565b820191906000526020600020905b8154815290600101906020018083116110ba57829003601f168201915b50505050509050600061111260408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b9050805160001415611125575092915050565b81511561115757808260405160200161113f929190611bf2565b60405160208183030381529060405292505050919050565b610cd1846112b9565b60006001600160e01b031982166380ac58cd60e01b148061119157506001600160e01b03198216635b5e139f60e01b145b806102fd57506301ffc9a760e01b6001600160e01b03198316146102fd565b6105338383836113ad565b60006001600160a01b0384163b156112ae57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111ff903390899088908890600401611c21565b6020604051808303816000875af192505050801561123a575060408051601f3d908101601f1916820190925261123791810190611c5e565b60015b611294573d808015611268576040519150601f19603f3d011682016040523d82523d6000602084013e61126d565b606091505b50805161128c5760405162461bcd60e51b81526004016103fd90611ba0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cd1565b506001949350505050565b60606112c48261099a565b6113285760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103fd565b600061135c60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b9050600081511161137c5760405180602001604052806000815250610569565b8061138684611465565b604051602001611397929190611bf2565b6040516020818303038152906040529392505050565b6001600160a01b0383166114085761140381600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61142b565b816001600160a01b0316836001600160a01b03161461142b5761142b8382611563565b6001600160a01b0382166114425761053381611600565b826001600160a01b0316826001600160a01b0316146105335761053382826116af565b6060816114895750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114b3578061149d81611c7b565b91506114ac9050600a83611cac565b915061148d565b60008167ffffffffffffffff8111156114ce576114ce611889565b6040519080825280601f01601f1916602001820160405280156114f8576020820181803683370190505b5090505b8415610cd15761150d600183611b89565b915061151a600a86611cc0565b611525906030611b71565b60f81b81838151811061153a5761153a611b45565b60200101906001600160f81b031916908160001a90535061155c600a86611cac565b94506114fc565b600060016115708461075c565b61157a9190611b89565b6000838152600760205260409020549091508082146115cd576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061161290600190611b89565b6000838152600960205260408120546008805493945090928490811061163a5761163a611b45565b90600052602060002001549050806008838154811061165b5761165b611b45565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061169357611693611cd4565b6001900381819060005260206000200160009055905550505050565b60006116ba8361075c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546116ff90611ab9565b90600052602060002090601f0160209004810192826117215760008555611767565b82601f1061173a57805160ff1916838001178555611767565b82800160010185558215611767579182015b8281111561176757825182559160200191906001019061174c565b50611773929150611777565b5090565b5b808211156117735760008155600101611778565b6001600160e01b03198116811461097257600080fd5b6000602082840312156117b457600080fd5b81356105698161178c565b60005b838110156117da5781810151838201526020016117c2565b838111156108995750506000910152565b600081518084526118038160208601602086016117bf565b601f01601f19169290920160200192915050565b60208152600061056960208301846117eb565b60006020828403121561183c57600080fd5b5035919050565b80356001600160a01b038116811461185a57600080fd5b919050565b6000806040838503121561187257600080fd5b61187b83611843565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118ba576118ba611889565b604051601f8501601f19908116603f011681019082821181831017156118e2576118e2611889565b816040528093508581528686860111156118fb57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561192857600080fd5b61193183611843565b9150602083013567ffffffffffffffff81111561194d57600080fd5b8301601f8101851361195e57600080fd5b61196d8582356020840161189f565b9150509250929050565b60008060006060848603121561198c57600080fd5b61199584611843565b92506119a360208501611843565b9150604084013590509250925092565b6000602082840312156119c557600080fd5b61056982611843565b600080604083850312156119e157600080fd5b6119ea83611843565b9150602083013580151581146119ff57600080fd5b809150509250929050565b60008060008060808587031215611a2057600080fd5b611a2985611843565b9350611a3760208601611843565b925060408501359150606085013567ffffffffffffffff811115611a5a57600080fd5b8501601f81018713611a6b57600080fd5b611a7a8782356020840161189f565b91505092959194509250565b60008060408385031215611a9957600080fd5b611aa283611843565b9150611ab060208401611843565b90509250929050565b600181811c90821680611acd57607f821691505b60208210811415611aee57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611b8457611b84611b5b565b500190565b600082821015611b9b57611b9b611b5b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611c048184602088016117bf565b835190830190611c188183602088016117bf565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c54908301846117eb565b9695505050505050565b600060208284031215611c7057600080fd5b81516105698161178c565b6000600019821415611c8f57611c8f611b5b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611cbb57611cbb611c96565b500490565b600082611ccf57611ccf611c96565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220953906b387d39cf12e0d95caf1fb6e91b9cbec68f9204a886d97d661612d8b6564736f6c634300080c0033";

export class TamaFriend__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TamaFriend> {
    return super.deploy(overrides || {}) as Promise<TamaFriend>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TamaFriend {
    return super.attach(address) as TamaFriend;
  }
  connect(signer: Signer): TamaFriend__factory {
    return super.connect(signer) as TamaFriend__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TamaFriendInterface {
    return new utils.Interface(_abi) as TamaFriendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TamaFriend {
    return new Contract(address, _abi, signerOrProvider) as TamaFriend;
  }
}
